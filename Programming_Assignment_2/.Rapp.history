library(ggplot2)
getwd()
dir()
ls
clear
dir()
ls
lis()
ls()
myfunction <- function(x){#
	x <- rnorm(100)#
	mean(y)#
}
myfunction()
myfunction <- function(x){#
	x <- rnorm(100)#
	mean(x)#
}
myfunction()
myfunction <- function(x){#
	y <- rnorm(100)#
	mean(y)#
}
myfunction()
x <- 9
x
x <- 1:9
x
x <- c(1, 5)
x
x <- 1:9
x <- c(1, 5, -1)
x
as.logical(x)
x <- as.logical(x)
x
as.numeric(x)
swirl
!swirl
swirl()
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x -3
y
z <- c(1.1, 9, 3,14)
c(1.1, 9, 3,14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2 + 100
my_sqrt <- z-1
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 5)+c(0, 10)
c(1, 2, 3, 4)+c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2 + 1000
my_div
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(1, 20, by=0.5)
seq(1, 10, by=0.5)
seq(0, 10, by=0.5)
seq(5, 10, length=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
sel_along(30)
sel_along(my_seq)
set_along(my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "your_name_here")
my_name = c(my_char, "your_name_here")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, times = 1000)
?rep
z <- rep(NA, 1000)
my_data <-(c(y,z), 100)
my_data <-sample(c(y,z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf - inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
c(x[3], x[5], x[7])
x[c(3, 5, 7)]
x[0]
x[300]
x[3000]
Try x[c(-2, -10)]
x[!c(2, 10)]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo =11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c ("foo", "bar", "norf")
identical(vect1, vect2)
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matric <- my_vector
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(nrow = 4, ncol = 5, 1:20)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
?colnames
colnames(my_data)
colnames(my_data) <- cnames
print(my_data)
my_data
swirl()
install.packages(KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
library(datasets)
data(iris)
mean(Sepal.Length)
iris
pwd
clear
source("complete.R")
source("corr.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("complete.R")
source("complete.R")
source("corr.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
cr <- corr("specdata", 150)#
head(cr)
summary(cr)
cr <- corr("specdata", 400)#
head(cr)
summary(cr)
setwd(..)
setwd('..')
setwd("assign3")
source("rankall.R")
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
